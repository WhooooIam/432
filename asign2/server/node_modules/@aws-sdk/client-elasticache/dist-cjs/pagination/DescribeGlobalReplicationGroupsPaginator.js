"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.paginateDescribeGlobalReplicationGroups = void 0;
const DescribeGlobalReplicationGroupsCommand_1 = require("../commands/DescribeGlobalReplicationGroupsCommand");
const ElastiCache_1 = require("../ElastiCache");
const ElastiCacheClient_1 = require("../ElastiCacheClient");
const makePagedClientRequest = async (client, input, ...args) => {
    return await client.send(new DescribeGlobalReplicationGroupsCommand_1.DescribeGlobalReplicationGroupsCommand(input), ...args);
};
const makePagedRequest = async (client, input, ...args) => {
    return await client.describeGlobalReplicationGroups(input, ...args);
};
async function* paginateDescribeGlobalReplicationGroups(config, input, ...additionalArguments) {
    let token = config.startingToken || undefined;
    let hasNext = true;
    let page;
    while (hasNext) {
        input.Marker = token;
        input["MaxRecords"] = config.pageSize;
        if (config.client instanceof ElastiCache_1.ElastiCache) {
            page = await makePagedRequest(config.client, input, ...additionalArguments);
        }
        else if (config.client instanceof ElastiCacheClient_1.ElastiCacheClient) {
            page = await makePagedClientRequest(config.client, input, ...additionalArguments);
        }
        else {
            throw new Error("Invalid client, expected ElastiCache | ElastiCacheClient");
        }
        yield page;
        token = page.Marker;
        hasNext = !!token;
    }
    return undefined;
}
exports.paginateDescribeGlobalReplicationGroups = paginateDescribeGlobalReplicationGroups;
